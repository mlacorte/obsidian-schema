@top MarkdownDoc { (Markdown | SchemaBlock | DataBlock)* }
@top SchemaDoc { block }

// for testing
@top TagDoc { Tag }
@top IdentifierDoc { Identifier }
@top LinkDoc { Link }
@top EmbedLinkDoc { EmbedLink }
// for testing

Markdown { unknown }

Schema { block }
SchemaBlock { schemaDelim Schema schemaDelim }

Data { block }
DataBlock { dataDelim Data dataDelim }

block { list<Property>? }

Expression { value | "(" Expression ")" }
value { Bool | Null | Number | String | Object | Array }

Object { "{" list<Property>? "}" }
Array  { "[" list<Expression>? "]" }
Property { (String | Tag | PropertyName) ":" Expression }

@external tokens schemaDelimTokenizer from "./schema.tokens" { schemaDelim }
@external tokens dataDelimTokenizer from "./schema.tokens" { dataDelim }
@external tokens unknownTokenizer from "./schema.tokens" { unknown }
@external tokens tagTokenizer from "./schema.tokens" { tag }
@external tokens identifierTokenizer from "./schema.tokens" { identifier }

Tag { tag }
Identifier { identifier }

@tokens {
  Number { "-"? $[0-9]+ ("." $[0-9]+)? }
  String { '"' ("\\" _ | !["\\])* '"' }
  Bool { "true" | "false" | "True" | "False" }
  Link { "[[" ![\[\]]* "]]" }
  EmbedLink { "![[" ![\[\]]* "]]" }
  Null { "null" }
  propertyChar { @asciiLetter | $[_$\u{a1}-\u{10ffff}] }
  PropertyName { propertyChar (propertyChar | @digit)* }
  whitespace { @whitespace }
  @precedence { whitespace, PropertyName }
}

@skip { whitespace }
list<item> { item ("," item)* }

@detectDelim